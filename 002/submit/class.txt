機械ソフトウェア演習
第二回
学籍番号 : 340192C
井上　裕太

[感想]


問題1
[operation.c]
#include<stdio.h>
#include<stdio.h>

double add(double x,double y);
double sub(double x,double y);
double mul(double x,double y);
double div(double x,double y);

int main(){
	double a,b,result;
    char buf[30];
	printf("Enter two numbers\n");
	fgets(buf,sizeof(buf),stdin);
	sscanf(buf,"%lf %lf",&a,&b);
	printf("a = %f,b = %f\n",a,b);
	result = add(a,b);
	printf("a + b = %f\n",result);
    result = sub(a,b);
    printf("a - b = %f\n",result);
    result = mul(a,b);
    printf("a * b = %f\n",result);
    result = div(a,b);
    printf("a / b = %f\n",result);
    return 0;
}

double add(double x,double y){
    return x + y;
}

double sub(double x,double y){
    return x - y;
}

double mul(double x,double y){
    return x * y;
}

double div(double x,double y){
    return x / y;
}

[command]
gcc operation.c -o operation -lm
./operation

[input]
1. 1 2
2. 4 5
3. 10 4
[output]
Enter two numbers

1.
a = 1.000000,b = 2.000000
a + b = 3.000000
a - b = -1.000000
a * b = 2.000000
a / b = 0.500000

2.
a = 4.000000,b = 5.000000
a + b = 9.000000
a - b = -1.000000
a * b = 20.000000
a / b = 0.800000

3.
a = 10.000000,b = 4.000000
a + b = 14.000000
a - b = 6.000000
a * b = 40.000000
a / b = 2.500000

[考察]
個人的には、実装部が一行なのでプロトタイプ宣言をするまでもなくそのままかいてしまってもいいかなと思うものだったが、プロトタイプ宣言の概念の導入を初期にやるというのは、後々の見やすいコードを書くという上で非常にいいと思う

問題2
[operation2.c]
#include<stdio.h>

double add(double x,double y);
double sub(double x,double y);
double mul(double x,double y);
double div(double x,double y);

int main(){
    double a,b,result;
    char buf[30];
    int i;
    printf("1.add 2. sub 3.mul 4.div\n");
    fgets(buf,sizeof(buf),stdin);
    sscanf(buf,"%d",&i);
    printf("Enter two numbers\n");
    fgets(buf,sizeof(buf),stdin);
    sscanf(buf,"%lf %lf",&a,&b);
    printf("a = %f,b = %f\n",a,b);
    result = add(a,b);
    switch (i) {
        case 1:
            result = add(a,b);
            printf("a + b = %f\n",result);
            break;
        case 2:
            result = sub(a,b);
            printf("a - b = %f\n",result);
            break;
        case 3:
            result = mul(a,b);
            printf("a * b = %f\n",result);
            break;
        default:
            result = div(a,b);
            printf("a / b = %f\n",result);
            break;
    }
    return 0;
}

double add(double x,double y){
    return x + y;
}

double sub(double x,double y){
    return x - y;
}

double mul(double x,double y){
    return x * y;
}

double div(double x,double y){
    return x / y;
}

[command]
gcc operation2.c -o operation2 -lm
./operation2

[input]
1. 1
   1 2
2. 2
   3 4
3. 3
   10 100
4. 4
   20 10

[output]
1. 
a = 1.000000,b = 2.000000
a + b = 3.000000

2. 
a = 3.000000,b = 4.000000
a - b = -1.000000

3. 
a = 10.000000,b = 100.000000
a * b = 1000.000000

4.
a = 20.000000,b = 10.000000
a / b = 2.000000

[考察]


問題3
[pro3.c]
#include<stdio.h>

int main(){
    int N;
    double result=0;
    scanf("%d",&N);
    for(int i=1;i<=N;i++){
        result += (double)1/(i*i);
    }
    printf("%lf\n”,result);
    return 0;
}

[command]
gcc roop.c -o roop -lm
./roop

[input]
1. 2
2. 10
3. 100
4. 10000

[output]
1.1.250000
2.1.549768
3.1.634984
4.1.644834

[考察]
4/3を先にやるとコンパイラにint型と判断されるのではと考え先にdouble型の変数を計算した、doubleでキャストするということも考えたが、cでのキャストは安全ではなかったと思ったのが理由である
[omake1.c]
#include<stdio.h>

int main(){
    int N;
    int os[5][5];
    int v_11=0,v_12=0,v_13=0,v_14=0,v_19=0,v_21=0,v_22=0,v_23=0,v_24=0,v_29=0,v_31=0,v_32=0,v_33=0,v_34=0,v_39=0,v_41=0,v_42=0,v_43=0,v_44=0,v_49=0,v_91=0,v_92=0,v_93=0,v_94=0,v_99=0;
    do{
        printf("|-----OS-----|------回答番号------|  |------形式------|------回答番号------|\n");
        printf("|Mac OS      | 1                 |  |デスクトップ　　　| 1                 |\n");
        printf("|Windows     | 2                 |  |ノート          | 2                 |\n");
        printf("|LINUX       | 3                 |  |タブレット       | 3                 |\n");
        printf("|Android     | 4                 |  |スマートフォン    | 4                 |\n");
        printf("|その他       | 9                 |  |その他          | 9                 |\n");
        printf("回答例 Windows-ノートの場合は 22\n");
        scanf("%d",&N);
        switch (N) {
            case 11:
                v_11++;
                break;
            case 12:
                v_12++;
                break;
            case 13:
                v_13++;
                break;
            case  14:
                v_14++;
                break;
            case  19:
                v_19++;
                break;
            case  21:
                v_21++;
                break;
            case  22:
                v_22++;
                break;
            case  23:
                v_23++;
                break;
            case  24:
                v_24++;
                break;
            case  29:
                v_29++;
                break;
            case  31:
                v_31++;
                break;
            case  32:
                v_32++;
                break;
            case  33:
                v_33++;
                break;
            case  34:
                v_34++;
                break;
            case  39:
                v_39++;
                break;
            case  41:
                v_41++;
                break;
            case  42:
                v_42++;
                break;
            case  43:
                v_43++;
                break;
            case  44:
                v_44++;
                break;
            case  49:
                v_99++;
                break;
            case  91:
                v_91++;
                break;
            case  92:
                v_92++;
                break;
            case 93:
                v_93++;
                break;
            case 94:
                v_94++;
                break;
            case 99:
                v_99++;
                break;
            default:
                break;
        }
        /* int t,o;
           t = N/10;
           o = N%10;
           os[t][o]++;
         */
    }while(N!=0);
    printf("Mac OS デスクトップ : %d\n",v_11);
    printf("Mac OS ノート : %d\n",v_12);
    printf("Mac OS タブレット : %d\n",v_13);
    printf("Mac OS スマートフォン : %d\n",v_14);
    printf("Mac OS その他 : %d\n",v_19);
    
    printf("Windows デスクトップ : %d\n",v_21);
    printf("Windows ノート : %d\n",v_22);
    printf("Windows OS タブレット : %d\n",v_23);
    printf("Windows OS スマートフォン : %d\n",v_24);
    printf("Windows その他 : %d\n",v_29);
    
    printf("LINUX デスクトップ : %d\n",v_31);
    printf("LINUX ノート : %d\n",v_32);
    printf("LINUX タブレット : %d\n",v_33);
    printf("LINUX スマートフォン : %d\n",v_34);
    printf("LINUX その他 : %d\n",v_39);
    
    printf("Android デスクトップ : %d\n",v_41);
    printf("Android ノート : %d\n",v_42);
    printf("Android タブレット : %d\n",v_43);
    printf("Android スマートフォン : %d\n",v_44);
    printf("Android その他 : %d\n",v_49);
    
    printf("その他 デスクトップ : %d\n",v_91);
    printf("その他 ノート : %d\n",v_92);
    printf("その他 タブレット : %d\n",v_93);
    printf("その他 スマートフォン : %d\n",v_94);
    printf("その他 その他 : %d\n",v_99);
    return 0;
}

[command]
gcc omake.c -o omake -lm
./omake

[input]
11
22
12
32
11
34
43
91
19
29
39
19
39
44
31
0

[output]
Mac OS デスクトップ : 2
Mac OS ノート : 1
Mac OS タブレット : 0
Mac OS スマートフォン : 0
Mac OS その他 : 2
Windows デスクトップ : 0
Windows ノート : 1
Windows OS タブレット : 0
Windows OS スマートフォン : 0
Windows その他 : 1
LINUX デスクトップ : 1
LINUX ノート : 1
LINUX タブレット : 0
LINUX スマートフォン : 1
LINUX その他 : 2
Android デスクトップ : 0
Android ノート : 0
Android タブレット : 1
Android スマートフォン : 1
Android その他 : 0
その他 デスクトップ : 1
その他 ノート : 0
その他 タブレット : 0
その他 スマートフォン : 0
その他 その他 : 0

[考察]
